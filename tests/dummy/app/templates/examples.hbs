<div class="container-fluid">

  As of version <b>1.1.0</b>, the addon embraces <b>DDAU</b>. The <b>content</b> property is readonly and <b>onContentChange</b> action is used for updated contents. As a result to follow <b>DDAU</b>, the summernote internall callback <b>onChange</b> will not be supported through the <b>callbacks</b> property in a consumming application.

  <div class="highlight">
    <pre>
    Use the following code to put a wysiwyg editor.

    &#123;&#123;summer-note
      focus=false
      btnSize=bs-sm
      airMode=false
      header="Example"
      height=contentHeight
      disabled=editingDisabled
      callbacks=callbackOptions
      customButtons=customButtons
      toolbarOptions=toolbarOptions
      content=(readonly postContent)
      onContentChange=(action 'onContentChange')
    &#125;&#125;
    </pre>
  </div>

  Example of configuring the toolbar options.

  <div class="highlight">
    <pre>
    toolbarOptions: {
      style: false,
      insert: {
        picture: false
      },
      help: true
    }
    </pre>
  </div>

  All callbacks except <b>onChange</b> are supported. The <b>onChange</b> callback are used internally for the <b>onContentChange</b> action.

  <div class="highlight">
    <pre>
    callbackOptions: {
      onInit: function() {
        console.log('Summernote is launched');
      },
      onEnter: function() {
        console.log('Enter/Return key pressed');
      },
      onPaste: function(e) {
        console.log('Called event paste');
      },
    },
    </pre>
  </div>

  <div>
    <h3>Example </h3>
    {{summer-note
      focus=false
      btnSize=bs-sm
      airMode=false
      header="Example"
      height=contentHeight
      disabled=editingDisabled
      callbacks=callbackOptions
      customButtons=customButtons
      toolbarOptions=toolbarOptions
      content=(readonly postContent)
      onContentChange=(action 'onContentChange')
    }}

    <p>Disable editing {{input type="checkbox" checked=editingDisabled}}</p>
  </div>
  <div>
    <div class='wysiwyg-preview'>
      <div class="highlight">
        <pre>{{{postContent}}}</pre>
      </div>
    </div>
  </div>
  <button {{action 'rerenderCheck' 'The editor is rerendered...'}}>
        Check rerender with new content
    </button>
</div>